# Insecure Pod with multiple CIS violations
apiVersion: v1
kind: Pod
metadata:
  name: insecure-pod
  namespace: default # CIS violation: Using default namespace
  labels:
    app: insecure-app
spec:
  # CIS violations: Host namespace sharing
  hostNetwork: true # 5.2.4 violation
  hostPID: true # 5.2.2 violation  
  hostIPC: true # 5.2.3 violation

  containers:
  - name: insecure-container
    image: nginx:latest
    ports:
    - containerPort: 80
    # CIS violations: Insecure security context
    securityContext:
      privileged: true # CIS violation: Privileged container
      allowPrivilegeEscalation: true # 5.2.5 violation
      runAsUser: 0 # CIS violation: Running as root
      readOnlyRootFilesystem: false # CIS violation: Writable root filesystem
      capabilities:
        add:
        - SYS_ADMIN # CIS violation: Dangerous capability
        - NET_ADMIN # CIS violation: Dangerous capability

    # CIS violation: No resource limits
    # resources:
    #   limits:
    #     memory: "256Mi"
    #     cpu: "500m"
    #   requests:
    #     memory: "128Mi" 
    #     cpu: "250m"

    # CIS violation: Mounting sensitive host paths
    volumeMounts:
    - name: host-root
      mountPath: /host
    - name: docker-socket
      mountPath: /var/run/docker.sock

  volumes:
  - name: host-root
    hostPath:
      path: / # CIS violation: Mounting host root
      type: Directory
  - name: docker-socket
    hostPath:
      path: /var/run/docker.sock # CIS violation: Docker socket access
      type: Socket
---
# Insecure Deployment in default namespace
apiVersion: apps/v1
kind: Deployment
metadata:
  name: insecure-deployment
  namespace: default # CIS violation: Using default namespace
spec:
  replicas: 3
  selector:
    matchLabels:
      app: insecure-app
  template:
    metadata:
      labels:
        app: insecure-app
    spec:
      # CIS violation: No security context
      containers:
      - name: insecure-app
        image: nginx:latest
        ports:
        - containerPort: 80
        # CIS violation: Running as root by default
        securityContext:
          runAsUser: 0
          allowPrivilegeEscalation: true # 5.2.5 violation

        # CIS violation: No resource limits
        env:
        - name: SENSITIVE_DATA
          value: "password123" # CIS violation: Hardcoded sensitive data
---
# Service with insecure configuration
apiVersion: v1
kind: Service
metadata:
  name: insecure-service
  namespace: default # CIS violation: Using default namespace
spec:
  type: LoadBalancer
  ports:
  - port: 80
    targetPort: 80
    protocol: TCP
  selector:
    app: insecure-app
  # CIS violation: No network policies to restrict access
